syntax = "proto3";

// Template authnZ defines an authorization and authentication adapter template
package authnZ;

import "policy/v1beta1/type.proto";
import "mixer/adapter/model/v1beta1/extensions.proto";

option (istio.mixer.adapter.model.v1beta1.template_variety) = TEMPLATE_VARIETY_CHECK_WITH_OUTPUT;

// The optional credentials passed in the request
message Credentials {
    // Optionally contains the authn/z session cookies
    string cookies = 1;
    // Optionally contains the authorization header
    string authorization_header = 2;
}

// The optional params returned during the OAuth 2.0 callback
message OAuthCallbackParams {

}

// A subject contains a list of attributes that identify
// the caller identity.
message Subject {
  // The user name/ID that the subject represents.
  string user = 1;
  // Groups the subject belongs to depending on the authentication mechanism,
  // "groups" are normally populated from JWT claim or client certificate.
  // The operator can define how it is populated when creating an instance of
  // the template.
  string groups = 2;
  // The optional credentials passed in the request
  Credentials credentials = 3;
  // Additional attributes about the subject.
  map<string, istio.policy.v1beta1.Value> properties = 4;
}

// An action defines "how a resource is accessed".
message Action {
  // Namespace the target action is taking place in.
  string namespace = 1;
  // The Service the action is being taken on.
  string service = 2;
  // What action is being taken.
  string method = 3;
  // HTTP REST path within the service
  string path = 4;
  // Additional data about the action for use in policy.
  map<string, istio.policy.v1beta1.Value> properties = 5;
}

// The `authorization` template defines parameters for performing policy
// enforcement within Istio. It is primarily concerned with enabling Mixer
// adapters to make decisions about who is allowed to do what.
// In this template, the "who" is defined in a Subject message. The "what" is
// defined in an Action message. During a Mixer Check call, these values
// will be populated based on configuration from request attributes and
// passed to individual authorization adapters to adjudicate.
message Template {
  // A subject contains a list of attributes that identify
  // the caller identity.
  Subject subject = 1;
  // An action defines "how a resource is accessed".
  Action action = 2;
}

// OutputTemplate defines OAuth 2.0 cookies to apply to response headers
// These are primarily used in OAuth 2.0 / OIDC web strategy
// flows and will be remain empty during most flows.
message OutputTemplate {
  // The access token cookie using in OAuth 2.0 flows
  string access_token_cookie = 1;
  // The ID token cookie using in OAuth 2.0 flows
  string id_token_cookie = 2;
  // The refresh token cookie using in OAuth 2.0 flows
  string refresh_token_cookie = 3;
}