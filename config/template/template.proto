syntax = "proto3";

// Template authnZ defines an authorization and authentication adapter template
package authnZ;

import "policy/v1beta1/type.proto";
import "mixer/adapter/model/v1beta1/extensions.proto";

option (istio.mixer.adapter.model.v1beta1.template_variety) = TEMPLATE_VARIETY_CHECK_WITH_OUTPUT;

// A Target contains the Action destination.
message Target {
    // The namespace the target service is in
    string namespace = 1;
    // The service the action is being taken on.
    string service = 2;
    // The HTTP method of the request
    string method = 3;
    // The HTTP REST path within the service
    string path = 4;
    // Additional data about the target for use in policy.
    map<string, istio.policy.v1beta1.Value> properties = 5;
}

// The Headers models the core HTTP headers needed for the JWT/OIDC flows
message Headers {
    // The optional cookies are the HTTP request cookies sent by the browser. These
    // contain the encrypted session toke
    string cookies = 1;
    // The optional authorization header contains credentials needed to verify
    // access / authorization privileges.
    string authorization = 2;
    // Additional data about the headers for use in policy.
    map<string, istio.policy.v1beta1.Value> properties = 3;
}

// The QueryParams are the code HTTP request query parameters used in an OAuth 2.0 / OIDC flow
message QueryParams {
    // The error matches an OAuth 2.0 callback error response
    string error = 1;
    // The code matches an OAuth 2.0 callback authorization code grant
    string code = 2;
    // Additional data about the query parameters for use in policy.
    map<string, istio.policy.v1beta1.Value> properties = 3;
}

// The Request captures information about the incoming HTTP request
message Request {
    // The HTTP scheme
    string scheme = 1;
    // The HTTP host
    string host = 2;
    // The HTTP path
    string path = 3;
    // The HTTP headers on the request
    Headers headers = 4;
    // THE HTTP query params
    QueryParams params = 5;
    // Additional data about the Request for use in policy.
    map<string, istio.policy.v1beta1.Value> properties = 6;
}

// The Authn/Z template contains the information necessary to
// control authorization and authentication using OAuth 2.0 / OIDC
// defined protocols. It captures information about the request source, destination
// and code request telemetry that allows comprehensive JWT policy definitions.
message Template {
    // The request contains the core information about the request being made
    Request request = 1;
    // The target contains aggregated Kube information about the destination
    Target target = 2;
}

// The Authn/Z template produces an authorization header of the format
// `Bearer <access> <id>` which should be replaced on the ongoing request.
message OutputTemplate {
    // The authorization header
    string authorization = 1;
}